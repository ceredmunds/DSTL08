var TrialsRatio = {
        proposedTrials: [],
        goodPath: [],

        //cond1 12
        cond1_12: [],
        cond2_12: [],
        cond3_12: [],
        cond1_24: [],
        cond2_24: [],
        cond3_24: [],

        entitiesCond1_12: {"1": 3, "2": 1, "3": 1, "4": 1, "5": 3, "6": 3},
        entitiesCond1_24: {"1": 4, "2": 4, "3": 4, "4": 4, "5": 4, "6": 4},


        entitiesCond2_12: {"1": 3, "2": 1, "3": 1, "4": 1, "5": 3, "6": 3},
        entitiesCond2_24: {"1": 4, "2": 4, "3": 4, "4": 4, "5": 4, "6": 4},

        entitiesCond3_12: {"1": 3, "2": 1, "3": 1, "4": 1, "7": 3, "8": 3},
        entitiesCond3_24: {"1": 4, "2": 4, "3": 4, "4": 4, "7": 4, "8": 4},



        createTrials: function (originalCategory, newCategory, ratioa, ratiob) {
          /*  if (Game.conditionExperiment == 1) {
                if (originalCategory == 5) {
                    originalCategory = 2
                    console.log(" cambio from af to f")
                }
                //assumed friendly to friendly
                if (originalCategory == 6) {
                    originalCategory = 4 //assumed hostile to hostile
                    console.log(" cambio from ah to h")
                }
                if (newCategory == 5) {
                    newCategory = 2
                    console.log(" cambio from af to f")
                }
                //assumed friendly to friendly
                if (newCategory == 6) {
                    newCategory = 4 //assumed hostile to hostile
                    console.log(" cambio from ah to h")
                }
            }*/

            var trialAtoB = originalCategory + "|" + newCategory
            var trialBtoA = newCategory + "|" + originalCategory;
            for (var i = 0; i < ratioa; i++) {
                TrialsRatio.proposedTrials.push(trialAtoB);
                console.log(" adding " + trialAtoB)
            }
            for (var j = 0; j < ratiob; j++) {
                TrialsRatio.proposedTrials.push(trialBtoA);
                console.log(" adding " + trialBtoA)
            }
            //console.log("END ROW")

        }
        ,
        init: function () {

            //acording to table 2.
            /*
            NOT REQUIED ANYMORE, they provide valid paths, here just to check the trials
            TrialsRatio.createTrials("1", "2", 2, 1);
            TrialsRatio.createTrials("1", "5", 2, 2);
            TrialsRatio.createTrials("1", "3", 2, 1);
            TrialsRatio.createTrials("1", "6", 2, 2);
            TrialsRatio.createTrials("1", "4", 2, 1);

            TrialsRatio.createTrials("3", "2", 1, 1);
            TrialsRatio.createTrials("3", "5", 1, 2);
            TrialsRatio.createTrials("3", "6", 1, 2);
            TrialsRatio.createTrials("3", "4", 1, 1);

            TrialsRatio.createTrials("2", "5", 1, 2);
            TrialsRatio.createTrials("2", "6", 1, 2);
            TrialsRatio.createTrials("2", "4", 1, 1);

            TrialsRatio.createTrials("5", "6", 2, 2);
            TrialsRatio.createTrials("5", "4", 2, 1);

            TrialsRatio.createTrials("6", "4", 2, 1);
            TrialsRatio.createTrials("0", "0", 4, 1);//5 NO CHANGES
*/

         //   console.log("FILL DATA")
            TrialsRatio.fillData();
        }
        ,

    initCreateMode: function () {

        //acording to table 2.

     //   NOT REQUIED ANYMORE, they provide valid paths, here just to check the trials
        TrialsRatio.createTrials("1", "2", 2, 1);
        TrialsRatio.createTrials("1", "5", 2, 2);
        TrialsRatio.createTrials("1", "3", 2, 1);
        TrialsRatio.createTrials("1", "6", 2, 2);
        TrialsRatio.createTrials("1", "4", 2, 1);

        TrialsRatio.createTrials("3", "2", 1, 1);
        TrialsRatio.createTrials("3", "5", 1, 2);
        TrialsRatio.createTrials("3", "6", 1, 2);
        TrialsRatio.createTrials("3", "4", 1, 1);

        TrialsRatio.createTrials("2", "5", 1, 2);
        TrialsRatio.createTrials("2", "6", 1, 2);
        TrialsRatio.createTrials("2", "4", 1, 1);

        TrialsRatio.createTrials("5", "6", 2, 2);
        TrialsRatio.createTrials("5", "4", 2, 1);

        TrialsRatio.createTrials("6", "4", 2, 1);
        TrialsRatio.createTrials("0", "0", 4, 1);//5 NO CHANGES


        //TrialsRatio.fillData();
    }
    ,

        getTrialPath: function () {
            i = 0
            do {
                console.log(" vs salvaje Trial " + i);
                goodTrial = TrialsRatio.test();
                i++;

                if (i >= 500) return;
            }
            while (!goodTrial || i == 10)
            console.log("Trials attempted " + i)
            console.log(TrialsRatio.goodPath);

        },

        test: function () {
            console.log(" Original: " + TrialsRatio.proposedTrials)
            tmp = Game.shuffleArray(TrialsRatio.proposedTrials);
            console.log(" propuesta: " + tmp);

            if (Game.conditionExperiment === 1 || Game.conditionExperiment === 4) {
                // entitiesByCategory = { "1":3, "2":1, "4":1 ,"3":1 , "5":3 , "6":3}  // condition 1 , case 12
                entitiesByCategory = {"1": 4, "2": 4, "3": 4, "4": 4, "5": 4, "6": 4}  // condition 1 , case 12
            } else {
                entitiesByCategory = {"1": 3, "2": 1, "3": 1, "4": 1, "5": 3, "6": 3}  // condition 2 , case 12
                // entitiesByCategory = {"1": 4, "2": 4, "3": 4, "4": 4, "5": 4, "6": 4}
            }

            trials = tmp.length;
            for (entry = 0; entry < trials; entry++) {
                categories_from_to = tmp[entry].split("|")
                console.log(" %c  Entites by category before ", 'background: #33aaff')
                console.log(entitiesByCategory);
                console.log("result: " + categories_from_to)
                if (categories_from_to[0] === "0") {
                    console.log("trial sin cambio");
                } else {
                    if (entitiesByCategory[categories_from_to[0]]) {
                        console.log(" Ir de categoria: %s cantidad actual %d a categoria %s cantidad futura %d:", categories_from_to[0], entitiesByCategory[categories_from_to[0]], categories_from_to[1], entitiesByCategory[categories_from_to[1]] + 1)
                        entitiesByCategory[categories_from_to[0]] = entitiesByCategory[categories_from_to[0]] - 1
                        entitiesByCategory[categories_from_to[1]] = entitiesByCategory[categories_from_to[1]] + 1
                    } else {

                        console.log(" %c WRONG PATH ", 'background: #ff0000')
                        return false;
                    }
                }

                console.log(" %c  Entites by category after ", 'background: #33aaff')
                console.log(entitiesByCategory)
            }
            TrialsRatio.goodPath = tmp;

            console.log(" %c GOOD PATH ", 'background: #00ff00')
            return true; //the trial has a path from beggining to end;


        }


        , fillData: function () {


         //cond 1 12
        TrialsRatio.cond1_12.push(["1|3", "2|3", "4|1", "5|4", "5|2", "4|3", "3|4", "4|5", "5|1", "5|6", "6|4", "0|0", "0|0", "1|4", "6|4", "4|2", "1|6", "3|5", "0|0", "2|6", "2|5", "6|3", "6|5", "3|6", "5|3", "0|0", "4|6", "0|0", "5|4", "1|2", "1|2", "3|1", "6|1", "6|2", "1|5", "6|1", "1|5", "2|1", "1|3", "6|2", "5|6", "3|2", "5|2", "6|5", "1|6", "5|1", "5|3", "1|4", "2|4", "6|3"] );
        TrialsRatio.cond1_12.push(Â ["1|6", "4|3", "5|6", "6|1", "6|4", "6|5", "2|6", "1|5", "1|5", "3|4", "1|2", "5|4", "6|2", "0|0", "4|2", "5|6", "5|1", "0|0", "5|3", "5|1", "2|4", "2|3", "4|6", "0|0", "1|3", "3|5", "6|1", "5|4", "1|6", "4|5", "0|0", "6|2", "3|1", "4|1", "2|1", "1|2", "3|6", "2|5", "6|3", "6|4", "1|3", "6|5", "6|3", "5|3", "3|2", "0|0", "1|4", "5|2", "5|2", "1|4"] );
        TrialsRatio.cond1_12.push(["6|1", "5|3", "3|1", "5|4", "4|6", "2|1", "4|3", "1|4", "3|6", "6|5", "3|5", "5|2", "0|0", "6|4", "4|1", "1|3", "6|4", "1|2", "2|6", "5|1", "1|6", "6|3", "2|5", "5|6", "4|5", "6|5", "1|5", "1|4", "0|0", "6|3", "4|2", "6|2", "1|5", "1|6", "5|4", "5|1", "3|4", "0|0", "5|2", "0|0", "0|0", "1|2", "5|6", "6|1", "2|3", "1|3", "3|2", "5|3", "6|2", "2|4"]);
        TrialsRatio.cond1_12.push(["6|5", "2|4", "3|4", "1|5", "4|3", "5|1", "5|2", "2|5", "5|3", "3|2", "5|1", "6|3", "5|6", "1|2", "2|1", "1|6", "4|6", "1|3", "1|3", "0|0", "3|6", "0|0", "2|6", "6|1", "1|4", "3|5", "3|1", "4|1", "0|0", "4|5", "6|3", "5|2", "5|3", "6|5", "1|6", "1|2", "0|0", "1|5", "6|2", "6|4", "6|1", "5|4", "6|4", "1|4", "2|3", "4|2", "0|0", "5|6", "5|4", "6|2"]);
        TrialsRatio.cond1_12.push(["6|4", "6|2", "4|3", "6|1", "5|2", "2|6", "0|0", "6|1", "1|6", "1|6", "2|5", "1|5", "4|6", "6|5", "3|2", "6|5", "5|1", "5|6", "5|3", "5|2", "3|4", "0|0", "2|3", "3|5", "3|1", "5|1", "0|0", "5|4", "0|0", "1|4", "0|0", "4|2", "1|4", "1|5", "4|1", "1|2", "5|4", "4|5", "1|2", "6|4", "5|6", "2|1", "1|3", "6|3", "2|4", "6|3", "5|3", "3|6", "6|2", "1|3"]);
        TrialsRatio.cond1_12.push(["0|0", "0|0", "1|5", "6|4", "5|2", "2|5", "1|6", "6|5", "5|1", "5|1", "3|5", "1|4", "6|1", "0|0", "2|1", "4|6", "4|1", "4|3", "1|6", "5|2", "6|4", "4|5", "5|6", "3|6", "6|3", "1|4", "6|5", "1|3", "1|2", "1|2", "5|6", "0|0", "3|4", "6|1", "2|6", "6|2", "6|2", "5|4", "3|2", "2|3", "5|3", "0|0", "1|5", "5|4", "2|4", "5|3", "6|3", "3|1", "1|3", "4|2"] );

            //cond 1 24


        TrialsRatio.cond1_24.push(["5|2", "1|5", "2|4", "6|4", "1|4", "2|3", "6|3", "2|5", "4|3", "0|0", "6|5", "3|6", "3|1", "5|3", "2|6", "5|2", "0|0", "3|4", "1|6", "1|3", "6|2", "5|1", "1|6", "6|5", "4|6", "5|4", "5|1", "3|2", "5|6", "6|3", "4|1", "6|4", "0|0", "1|4", "6|2", "1|2", "0|0", "5|6", "3|5", "2|1", "5|4", "1|5", "0|0", "6|1", "4|5", "1|2", "1|3", "4|2", "5|3", "6|1"]);
        TrialsRatio.cond1_24.push(["6|1", "6|5", "5|4", "2|1", "1|5", "0|0", "5|3", "0|0", "4|3", "0|0", "6|5", "6|1", "3|1", "2|6", "4|2", "1|3", "5|2", "5|6", "6|3", "0|0", "0|0", "2|5", "1|5", "4|6", "5|1", "3|4", "6|4", "3|6", "6|4", "5|6", "4|5", "2|4", "1|2", "1|6", "4|1", "5|3", "1|2", "5|4", "1|4", "3|5", "2|3", "6|2", "3|2", "6|3", "1|4", "6|2", "1|3", "5|2", "5|1", "1|6"]);
        TrialsRatio.cond1_24.push(["4|1", "6|3", "3|2", "1|6", "6|4", "5|2", "6|3", "2|4", "3|1", "4|5", "6|4", "5|6", "2|1", "1|4", "1|3", "1|5", "4|6", "3|4", "0|0", "2|6", "0|0", "5|6", "6|2", "3|6", "5|4", "5|1", "5|1", "6|1", "3|5", "2|5", "1|5", "0|0", "1|6", "0|0", "6|5", "0|0", "1|2", "4|3", "5|2", "1|2", "6|5", "5|3", "4|2", "1|4", "2|3", "6|2", "1|3", "5|3", "5|4", "6|1"]);
        TrialsRatio.cond1_24.push(["0|0", "4|2", "1|4", "3|1", "3|2", "2|5", "6|3", "5|6", "4|1", "4|5", "6|5", "6|1", "3|4", "6|4", "2|3", "2|4", "1|6", "0|0", "4|3", "5|2", "0|0", "6|1", "5|6", "6|3", "4|6", "5|1", "1|3", "1|5", "1|5", "5|1", "2|6", "6|2", "3|5", "5|3", "0|0", "0|0", "3|6", "1|4", "6|4", "5|4", "6|5", "1|2", "5|2", "1|6", "6|2", "5|4", "2|1", "5|3", "1|3", "1|2"]);
        TrialsRatio.cond1_24.push(Â ["1|5", "3|6", "1|6", "6|4", "2|1", "0|0", "4|1", "1|6", "0|0", "6|3", "5|6", "6|2", "0|0", "5|3", "5|2", "6|1", "6|5", "5|4", "3|2", "4|2", "5|2", "4|3", "6|4", "4|5", "6|2", "5|4", "2|5", "6|3", "1|2", "1|5", "1|2", "3|5", "5|6", "3|1", "0|0", "1|3", "5|1", "6|5", "1|3", "5|3", "5|1", "2|6", "6|1", "2|4", "1|4", "1|4", "0|0", "2|3", "4|6", "3|4"]);

            //cond 2 24
        TrialsRatio.cond2_24.push(["1|5", "0|0", "4|6", "1|4", "0|0", "5|1", "2|5", "5|4", "4|1", "1|5", "5|3", "1|6", "5|6", "6|5", "6|4", "2|1", "5|6", "6|5", "6|1", "1|2", "6|2", "0|0", "4|3", "5|4", "3|1", "5|2", "2|4", "0|0", "3|5", "6|1", "2|6", "3|2", "6|3", "1|6", "3|6", "5|2", "4|2", "6|3", "3|4", "6|4", "1|3", "5|3", "1|2", "5|1", "0|0", "1|4", "4|5", "6|2", "1|3", "2|3"]);
            TrialsRatio.cond2_24.push(["1|5", "2|1", "0|0", "6|2", "0|0", "5|1", "6|5", "6|2", "1|2", "6|3", "1|3", "4|6", "5|2", "3|6", "0|0", "6|5", "3|5", "6|4", "2|6", "2|4", "2|3", "5|3", "6|3", "4|1", "5|3", "5|2", "1|6", "1|4", "0|0", "1|6", "5|1", "5|4", "4|5", "3|4", "1|5", "1|3", "6|1", "5|6", "5|6", "1|2", "5|4", "3|2", "4|2", "6|1", "3|1", "4|3", "6|4", "1|4", "0|0", "2|5"]);
            TrialsRatio.cond2_24.push(["5|4", "3|6", "2|6", "0|0", "5|1", "6|4", "0|0", "4|1", "2|4", "3|2", "6|3", "0|0", "6|2", "4|5", "3|4", "1|5", "1|5", "6|2", "2|3", "5|1", "6|3", "5|6", "1|4", "5|2", "6|1", "1|6", "1|2", "6|5", "5|6", "3|1", "2|1", "0|0", "6|1", "5|2", "1|2", "5|4", "2|5", "1|3", "6|4", "4|2", "0|0", "5|3", "4|3", "1|6", "6|5", "1|3", "5|3", "4|6", "1|4", "3|5"]);
            TrialsRatio.cond2_24.push(["5|3", "5|4", "1|5", "2|5", "5|6", "3|6", "6|2", "3|2", "2|4", "0|0", "6|4", "4|6", "6|1", "3|1", "5|1", "5|4", "1|6", "1|2", "5|2", "2|3", "3|5", "0|0", "2|1", "0|0", "1|4", "5|2", "6|1", "1|5", "4|2", "0|0", "4|3", "6|5", "1|6", "1|4", "5|6", "4|5", "1|2", "5|3", "2|6", "6|4", "1|3", "0|0", "5|1", "3|4", "6|5", "6|2", "6|3", "6|3", "4|1", "1|3"]);
            TrialsRatio.cond2_24.push(["1|6", "5|6", "5|3", "1|5", "6|1", "0|0", "0|0", "2|1", "4|5", "6|2", "6|5", "5|4", "3|5", "5|2", "6|2", "5|4", "2|6", "6|4", "5|6", "1|5", "4|1", "6|3", "6|3", "6|1", "3|6", "2|3", "3|2", "6|4", "5|2", "0|0", "3|1", "5|1", "3|4", "2|5", "1|2", "1|6", "4|3", "1|4", "5|1", "2|4", "4|2", "0|0", "1|4", "6|5", "1|3", "1|2", "4|6", "0|0", "1|3", "5|3"]);

            //cond 2 12   entitiesByCategory={ "1":3, "2":1 ,"3":1, "4":1 ,"5":3 ,"6":3}
            TrialsRatio.cond2_12.push(["0|0", "0|0", "1|4", "1|6", "6|5", "6|1", "5|6", "1|4", "3|1", "0|0", "5|4", "2|3", "5|2", "4|5", "5|3", "6|2", "6|5", "4|2", "1|5", "5|6", "2|6", "0|0", "1|5", "5|1", "5|1", "3|2", "6|4", "2|4", "6|2", "6|4", "0|0", "5|3", "3|6", "4|6", "1|6", "6|1", "6|3", "3|5", "3|4", "4|1", "2|5", "5|2", "4|3", "1|2", "1|2", "2|1", "1|3", "6|3", "1|3", "5|4"]);
           TrialsRatio.cond2_12.push(["0|0", "3|5", "1|4", "4|1", "1|2", "5|1", "5|2", "6|1", "6|4", "2|6", "1|6", "0|0", "1|6", "6|5", "5|1", "1|5", "4|2", "5|6", "2|1", "6|1", "5|4", "5|6", "6|5", "4|6", "6|3", "2|5", "5|3", "1|4", "2|3", "5|3", "6|3", "3|6", "4|5", "1|3", "3|4", "6|2", "1|5", "1|2", "3|2", "5|2", "3|1", "6|4", "0|0", "2|4", "4|3", "0|0", "0|0", "6|2", "5|4", "1|3"]);
            TrialsRatio.cond2_12.push(["1|4", "5|1", "1|6", "5|1", "2|4", "6|2", "6|4", "3|2", "4|5", "5|6", "2|3", "3|1", "6|3", "5|6", "6|2", "2|5", "1|2", "4|6", "3|5", "4|1", "4|2", "0|0", "0|0", "1|3", "6|5", "1|5", "6|4", "5|4", "6|1", "0|0", "5|3", "2|1", "3|6", "3|4", "6|1", "1|2", "2|6", "1|5", "5|4", "1|3", "5|2", "0|0", "1|6", "5|3", "6|5", "6|3", "0|0", "1|4", "5|2", "4|3"]);
            TrialsRatio.cond2_12.push(["5|3", "0|0", "0|0", "1|3", "6|1", "1|6", "3|1", "0|0", "5|3", "6|4", "0|0", "0|0", "6|3", "4|1", "3|4", "2|5", "1|6", "5|4", "6|5", "4|2", "1|4", "2|6", "6|2", "5|1", "1|5", "5|2", "6|1", "2|3", "2|4", "1|2", "5|6", "6|5", "5|1", "4|3", "1|3", "1|5", "4|6", "3|5", "1|4", "4|5", "2|1", "6|2", "1|2", "5|2", "5|4", "5|6", "3|2", "3|6", "6|4", "6|3"]);
            TrialsRatio.cond2_12.push(["6|2", "1|5", "1|3", "1|6", "4|6", "6|4", "3|5", "5|6", "5|3", "4|5", "6|1", "0|0", "5|2", "3|4", "4|3", "2|1", "1|2", "6|5", "6|4", "2|3", "5|1", "5|4", "3|6", "1|3", "1|4", "6|5", "5|4", "6|3", "0|0", "3|2", "5|3", "0|0", "2|5", "4|1", "5|2", "3|1", "5|1", "2|6", "6|2", "1|6", "2|4", "0|0", "1|5", "6|3", "5|6", "1|4", "0|0", "6|1", "4|2", "1|2"]);
            TrialsRatio.cond2_12.push(["1|2", "1|6", "6|3", "2|3", "5|4", "4|2", "3|6", "6|1", "1|3", "6|2", "5|3", "1|5", "2|4", "2|5", "0|0", "5|3", "2|6", "3|4", "4|1", "5|1", "4|6", "6|4", "0|0", "0|0", "5|6", "6|5", "5|1", "6|1", "4|5", "6|3", "1|3", "0|0", "6|5", "1|4", "1|6", "1|2", "4|3", "2|1", "6|4", "3|5", "0|0", "5|2", "3|1", "1|5", "3|2", "5|6", "6|2", "1|4", "5|4", "5|2"]);


            //cond 3 `12`
            TrialsRatio.cond3_12.push(["8|3", "3|1", "7|8", "8|4", "1|4", "8|7", "3|2", "4|1", "1|4", "2|1", "4|3", "1|8", "3|4", "8|3", "3|8", "8|2", "0|0", "1|3", "4|7", "2|8", "2|4", "0|0", "1|2", "8|7", "0|0", "7|3", "4|8", "2|7", "7|1", "3|7", "7|8", "8|1", "4|2", "8|1", "1|7", "0|0", "1|8", "8|2", "1|3", "7|2", "7|4", "7|2", "7|4", "8|4", "2|3", "0|0", "1|2", "7|1", "1|7", "7|3"]);
            TrialsRatio.cond3_12.push(["8|2", "3|7", "1|8", "8|2", "2|1", "8|7", "4|8", "1|8", "7|4", "1|3", "8|1", "4|7", "2|4", "7|2", "8|4", "2|3", "7|4", "8|7", "3|1", "1|7", "3|8", "7|1", "0|0", "1|4", "7|8", "0|0", "1|2", "0|0", "0|0", "0|0", "7|1", "7|3", "8|3", "7|3", "4|1", "4|3", "2|8", "1|2", "8|1", "2|7", "8|4", "7|8", "8|3", "1|7", "4|2", "1|4", "3|2", "1|3", "3|4", "7|2"]);
            TrialsRatio.cond3_12.push(["1|4", "7|1", "8|7", "3|4", "4|1", "8|3", "3|7", "7|8", "4|7", "0|0", "1|3", "4|8", "1|7", "1|2", "0|0", "3|1", "2|3", "1|8", "7|4", "7|4", "0|0", "7|8", "8|1", "4|3", "1|8", "2|7", "1|3", "8|7", "7|3", "7|1", "7|2", "3|8", "7|3", "8|1", "8|3", "3|2", "4|2", "1|7", "2|1", "8|2", "2|8", "1|2", "8|4", "0|0", "1|4", "8|4", "7|2", "8|2", "0|0", "2|4"]);
            TrialsRatio.cond3_12.push(["7|4", "7|8", "1|3", "7|2", "1|3", "1|7", "3|1", "0|0", "8|1", "2|1", "1|2", "4|8", "8|7", "3|8", "8|1", "8|4", "7|4", "1|2", "0|0", "2|8", "8|2", "4|2", "2|3", "8|4", "0|0", "3|7", "4|1", "2|4", "0|0", "8|7", "1|7", "3|2", "7|2", "0|0", "1|8", "7|1", "2|7", "7|3", "1|8", "8|3", "7|8", "7|3", "4|3", "4|7", "1|4", "8|3", "7|1", "8|2", "1|4", "3|4"]);
            TrialsRatio.cond3_12.push(["1|8", "7|8", "0|0", "3|1", "1|2", "8|4", "8|7", "1|3", "2|1", "7|1", "4|2", "4|7", "7|4", "8|2", "2|3", "3|2", "4|1", "1|7", "7|2", "1|4", "2|4", "3|7", "1|8", "1|3", "2|7", "3|8", "8|1", "0|0", "7|1", "4|8", "0|0", "7|4", "8|4", "1|4", "8|7", "7|3", "7|2", "4|3", "1|7", "8|3", "0|0", "3|4", "8|1", "2|8", "0|0", "1|2", "8|3", "7|8", "8|2", "7|3"]);

            //cond 3 24
            TrialsRatio.cond3_24.push(["3|7", "8|2", "8|1", "7|2", "8|1", "1|8", "2|7", "4|3", "0|0", "3|8", "2|4", "8|7", "2|3", "3|4", "1|7", "4|8", "1|8", "4|7", "2|8", "8|3", "7|1", "8|4", "0|0", "4|2", "7|8", "1|2", "1|3", "7|8", "8|3", "3|2", "8|7", "1|7", "1|4", "8|4", "0|0", "7|4", "7|3", "2|1", "7|3", "8|2", "4|1", "7|1", "1|4", "7|2", "7|4", "1|3", "1|2", "0|0", "3|1", "0|0"]);
            TrialsRatio.cond3_24.push(["4|7", "1|4", "1|7", "8|2", "2|4", "8|1", "7|4", "3|7", "7|1", "3|8", "7|8", "7|1", "0|0", "8|3", "8|4", "7|2", "2|1", "3|2", "1|2", "8|7", "2|7", "1|8", "2|8", "0|0", "4|8", "3|1", "0|0", "7|3", "0|0", "8|2", "7|4", "1|2", "8|4", "3|4", "7|3", "7|8", "8|1", "0|0", "1|8", "1|4", "1|7", "2|3", "1|3", "4|1", "7|2", "4|3", "8|3", "1|3", "4|2", "8|7"]);
            TrialsRatio.cond3_24.push(["4|3", "7|4", "8|3", "8|2", "7|3", "3|7", "0|0", "7|2", "7|8", "4|1", "8|1", "8|3", "8|1", "1|3", "1|8", "2|8", "3|4", "1|2", "1|2", "7|1", "1|3", "0|0", "2|7", "3|2", "2|1", "7|3", "1|8", "1|7", "8|2", "0|0", "3|1", "3|8", "0|0", "7|1", "1|7", "4|7", "8|7", "2|4", "2|3", "7|2", "0|0", "1|4", "8|4", "1|4", "7|8", "4|8", "8|7", "7|4", "8|4", "4|2"]);
            TrialsRatio.cond3_24.push(["8|4", "1|2", "8|3", "7|1", "4|2", "2|8", "2|4", "7|2", "1|8", "1|4", "7|4", "7|8", "1|4", "3|1", "1|7", "3|4", "3|2", "2|1", "4|8", "3|8", "8|1", "7|8", "2|7", "2|3", "7|2", "3|7", "8|7", "1|7", "8|2", "4|3", "8|1", "1|3", "7|3", "1|2", "8|2", "0|0", "7|1", "1|8", "8|7", "0|0", "0|0", "8|4", "0|0", "1|3", "7|3", "0|0", "8|3", "4|1", "7|4", "4|7"]);
            TrialsRatio.cond3_24.push(["4|1", "2|3", "4|8", "0|0", "3|7", "2|4", "8|7", "7|3", "3|2", "1|8", "8|1", "7|2", "7|1", "7|4", "8|1", "3|8", "7|3", "2|1", "8|4", "1|7", "1|4", "4|3", "0|0", "1|7", "1|2", "8|7", "7|2", "1|2", "0|0", "2|8", "2|7", "1|3", "1|8", "4|7", "7|8", "3|1", "8|2", "4|2", "8|3", "7|1", "7|8", "1|4", "3|4", "7|4", "0|0", "0|0", "8|2", "8|4", "8|3", "1|3"]);

        }

        ,
        testPath: function (path, entitiesByCategory) {

            trials = path.length;

            if (trials != 50) {
                console.log("ERROR PATH No tiene 50")
            } else {
                console.log("50 trials")
            }
            for (entry = 0; entry < trials; entry++) {
                categories_from_to = path[entry].split("|")
                console.log("TRIAL: %d result: %s", (entry + 1), categories_from_to)
                if (categories_from_to[0] === "0") {
                    console.log("trial sin cambio");
                } else {
                    if (entitiesByCategory[categories_from_to[0]]) {
                        //console.log(" Ir de categoria: %s cantidad actual %d a categoria %s cantidad futura %d:", categories_from_to[0], entitiesByCategory[categories_from_to[0]], categories_from_to[1], entitiesByCategory[categories_from_to[1]] + 1)
                        entitiesByCategory[categories_from_to[0]] = entitiesByCategory[categories_from_to[0]] - 1
                        entitiesByCategory[categories_from_to[1]] = entitiesByCategory[categories_from_to[1]] + 1
                    } else {
                        console.log("%c ERRRROROROORRO", )
                        console.log(" %c WRONG ", 'background: #ff0000')

                        return false;
                    }
                }

                console.log(entitiesByCategory)
            }

            console.log(" Estado FINAL")
            console.log(" %c POSSIBLE ", 'background: #00ff00')

            console.log(entitiesByCategory)


        }


    }
;
